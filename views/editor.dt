extends layout
block extraCss
  style.
    .hidden {
      display: none !important;
    }
block extraJs
  - import iopipe.json.serialize;
  - import std.datetime.systime;
  script.
    var clients = !{model.allClients.serialize};

    function setupProjectList() {
      let clientId = document.getElementById('client-selector').value;
      let curProject = document.getElementById('project-selector').value;
      let firstValue = null;
      document.querySelectorAll('#project-selector option').forEach((opt) => {
        if(opt.getAttribute('data-client') == clientId)
        {
          opt.classList.remove('hidden');
          if(opt.value == curProject || !firstValue)
            firstValue = opt.value;
        }
        else
          opt.classList.add('hidden');
      });
      document.getElementById('project-selector').value = firstValue;
    }

    function setDefaultRate() {
      let clientId = parseInt(document.getElementById('client-selector').value);
      let rateElement = document.getElementById('rate');
      rateElement.value = clients.find(c => c.id == clientId).defaultRate;
    }

    function clientChanged() {
      setupProjectList();
      setDefaultRate();
    }

    setupProjectList();


    let fpstart = flatpickr(document.getElementById('start'), {enableTime: true, enableSeconds: true});
    let fpstop = flatpickr(document.getElementById('stop'), {enableTime: true, enableSeconds: true});
    if(fpstart.mobileInput) {
      fpstart.mobileInput.setAttribute("step", "any");
    }
    if(fpstop.mobileInput) {
      fpstop.mobileInput.setAttribute("step", "any");
    }

    function updateDuration() {
      let durationElement = document.getElementById('duration')
      let delta = fpstop.selectedDates[0].valueOf() - fpstart.selectedDates[0].valueOf();
      delta += 500; // round up
      delta = Math.floor(delta / 1000);
      let seconds = ('0' + (delta % 60)).slice(-2);
      delta = Math.floor(delta / 60);
      let minutes = ('0' + (delta % 60)).slice(-2);
      delta = Math.floor(delta / 60);
      let hours = delta;
      durationElement.innerText = `${hours}:${minutes}:${seconds}`;
    }

    fpstart.config.onChange.push(updateDuration);
    fpstop.config.onChange.push(updateDuration);
      
block content
  h2 Edit task id #{model.currentTask.id}
  - import tracker.db : Rate;
  - import tracker.app : DurationPrinter;
  form(action="/process-edit-task", method="POST")
    input(type="hidden", name="taskid", value=(model.currentTask.id))
    .row
      .col-md-2
        label.form-label Client
        select.form-select#client-selector(name="client_id", onchange="clientChanged()")
          - foreach(client; model.allClients)
            option(value=(client.id), selected=(client.id == model.currentTask.client_id)) #{client.id} - #{client.name}
      .col-md-2
        label.form-label Project
        select.form-select#project-selector(name="project_id")
          - foreach(project; model.allProjects)
            option(data-client=(project.client_id), value=(project.id), selected=(project.id == model.currentTask.project_id)) #{project.id} - #{project.name}
      .col-md-2
        label.form-label Rate
        input.form-control#rate(name="rate", type="number", step="0.01", value=(model.currentTask.rate.get(Rate(0))))
      .col-md-6
        label.form-label Comment
        input.form-control(type="text", name="comment", placeholder="Enter task comment here", value=(model.currentTask.comment))
    .row
      .col-md-4
        label.form-label Start
        input#start.form-control.flatpickr(type="text", name="start", value=(model.currentTask.start.toISOExtString))
      .col-md-4
        label.form-label Stop
        input#stop.form-control.flatpickr(type="text", name="stop", value=(model.currentTask.stop.get.toISOExtString))
      .col-md-2
        label.form-label Duration
        p#duration #{DurationPrinter(model.currentTask.stop.get - model.currentTask.start)}
    .row
      .col-md-4
        .btn-group
          button.btn.btn-primary(type="submit", name="action", value="update") Update
          a.btn.btn-secondary(href="/") Cancel

